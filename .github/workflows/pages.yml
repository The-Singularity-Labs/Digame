# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
            go-version-file: 'go.mod'
      - name: Get dependencies
        run: go mod download
      - name: Get dependencies
        run: go mod download
      - name: Install Vgrun
        run: go install github.com/vugu/vgrun@latest
      - name: Install Vgrun Tools
        run: vgrun -install-tools
      - name: Build Distribution
        run: go run dist.go
      - name: Add Turret CSS to Distribution
        run: cp turretcss.min.css dist/turretcss.min.css
      - name: Add Favicon to Distribution
        run: cp favicon.png dist/favicon.png
      - name: Find and Replace wasm_exec.js
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "/wasm_exec.js"
          replace: "wasm_exec.js"
          regex: false
          include: dist/index.html
      - name: Find and Replace main.wasm
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "/main.wasm"
          replace: "main.wasm"
          regex: false
          include: dist/index.html
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
      
      - uses: actions/setup-node@v3

      - name: Install Nativefier
        run: npm install -g nativefier

      - name: Run Nativefier Linux
        run: nativefier --portable --platform 'linux'  --name 'Digame' 'https://the-singularity-labs.github.io/Digame'

      - name: Archive linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: digame-linux-x64
          path: /home/runner/work/Digame/Digame/Digame-linux-x64

      - name: Add i386 Architecture
        run: sudo dpkg --add-architecture i386

      - name: Add Wine Release Key
        run: curl -fsSL  https://dl.winehq.org/wine-builds/Release.key | sudo apt-key add -

      - name: Random Wine fix
        run: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv F987672F
      - name: Add Wine Repository
        run: sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
      
      - name: Apt Update
        run: sudo apt-get update
      
      - name: Install wine
        run: sudo apt-get install -y --install-recommends winehq-stable winetricks winbind

      - name: Run Nativefier Windows
        run: nativefier --portable --platform 'windows'  --name 'Digame' 'https://the-singularity-labs.github.io/Digame'

      - name: Archive linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: digame-windows-x64
          path: /home/runner/work/Digame/Digame/Digame-win32-x64

